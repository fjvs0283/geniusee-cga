{
    "title": "facebook-page-crawler",
    "description": "Extract public profile information from Facebook pages and service listings. The actor scrapes data from Facebook posts, comments, reviews, and more.",
    "type": "object",
    "schemaVersion": 1,
    "properties": {
        "startUrls": {
            "title": "Start urls",
            "description": "Can provide either existing pages or business listing in the format https://www.facebook.com/biz/",
            "default": [],
            "prefill": [{ "url": "https://www.facebook.com/apifytech/" }],
            "example": [
                { "url": "https://www.facebook.com/apifytech" },
                { "url": "https://www.facebook.com/biz/hotel-supply-service/?place_id=103095856397524" }
            ],
            "type": "array",
            "uniqueItems": true,
            "editor": "requestListSources"
        },
        "language": {
            "title": "Language",
            "description": "Provide the language. Using this setting changes the dataset output.",
            "default": "en-US",
            "prefill": "en-US",
            "type": "string",
            "editor": "select",
            "enum": [
                "af-ZA",
                "az-AZ",
                "bs-BA",
                "br-FR",
                "ca-ES",
                "cx-PH",
                "co-FR",
                "cs-CZ",
                "da-DK",
                "en-GB",
                "en-US",
                "eo-EO",
                "et-EE",
                "eu-ES",
                "tl-PH",
                "fo-FO",
                "fr-CA",
                "fr-FR",
                "fy-NL",
                "ff-NG",
                "gl-ES",
                "de-DE",
                "gn-PY",
                "ha-NG",
                "hr-HR",
                "id-ID",
                "ga-IE",
                "is-IS",
                "it-IT",
                "jv-ID",
                "rw-RW",
                "ht-HT",
                "ku-TR",
                "lv-LV",
                "lt-LT",
                "hu-HU",
                "mg-MG",
                "ms-MY",
                "mt-MT",
                "nl-NL",
                "nl-BE",
                "nb-NO",
                "nn-NO",
                "pl-PL",
                "pt-BR",
                "pt-PT",
                "ro-RO",
                "sc-IT",
                "sn-ZW",
                "sq-AL",
                "sz-PL",
                "sk-SK",
                "sl-SI",
                "so-SO",
                "es-LA",
                "es-ES",
                "fi-FI",
                "sw-KE",
                "sv-SE",
                "tr-TR",
                "uz-UZ",
                "vi-VN",
                "cy-GB",
                "zz-TR",
                "el-GR",
                "be-BY",
                "bg-BG",
                "ky-KG",
                "kk-KZ",
                "mk-MK",
                "mn-MN",
                "ru-RU",
                "sr-RS",
                "tt-RU",
                "tg-TJ",
                "uk-UA",
                "ka-GE",
                "hy-AM",
                "he-IL",
                "ur-PK",
                "ar-AR",
                "ps-AF",
                "fa-IR",
                "cb-IQ",
                "sy-SY",
                "tz-MA",
                "am-ET",
                "ne-NP",
                "mr-IN",
                "hi-IN",
                "as-IN",
                "bn-IN",
                "pa-IN",
                "gu-IN",
                "or-IN",
                "ta-IN",
                "te-IN",
                "kn-IN",
                "ml-IN",
                "si-LK",
                "th-TH",
                "lo-LA",
                "my-MM",
                "km-KH",
                "ko-KR",
                "zh-TW",
                "zh-CN",
                "zh-HK",
                "ja-JP",
                "ja-KS"
            ],
            "enumTitles": [
                "Afrikaans",
                "Azərbaycan dili",
                "Bosnian",
                "Brezhoneg",
                "Catalan",
                "Cebuano",
                "Corsu",
                "Czech",
                "Dansk",
                "English (UK)",
                "English (US)",
                "Esperanto",
                "Estonian",
                "Euskara",
                "Filipino",
                "Føroyskt",
                "French (Canada)",
                "French (France)",
                "Frysk",
                "Fula",
                "Galician",
                "German",
                "Guarani",
                "Hausa",
                "Hrvatski",
                "Indonesian",
                "Irish",
                "Íslenska",
                "Italiano",
                "Javanese",
                "Kinyarwanda",
                "Kreyòl Ayisyen",
                "Kurdish (Kurmanji)",
                "Latviešu",
                "Lithuanian",
                "Magyar",
                "Malagasy",
                "Malay",
                "Malti",
                "Nederlands",
                "Nederlands (België)",
                "Norwegian (bokmal)",
                "Norwegian (nynorsk)",
                "Polski",
                "Portuguese (Brazil)",
                "Portuguese (Portugal)",
                "Romanian",
                "Sardu",
                "Shona",
                "Shqip",
                "ślōnskŏ gŏdka",
                "Slovenčina",
                "Slovenščina",
                "Somali",
                "Spanish",
                "Spanish (Spain)",
                "Suomi",
                "Swahili",
                "Swedish",
                "Turkish",
                "Uzbek",
                "Vietnamese",
                "Welsh",
                "Zaza",
                "Ελληνικά",
                "Беларуская",
                "Български",
                "кыргызча",
                "Қазақша",
                "Македонски",
                "Монгол",
                "Русский",
                "Српски",
                "Татарча",
                "Тоҷикӣ",
                "Українська",
                "ქართული",
                "Հայերեն",
                "עברית",
                "اردو",
                "العربية",
                "پښتو",
                "فارسی",
                "کوردیی ناوەندی",
                "ܣܘܪܝܝܐ",
                "ⵜⴰⵎⴰⵣⵉⵖⵜ",
                "አማርኛ",
                "नेपाली",
                "मराठी",
                "हिन्दी",
                "অসমীয়া",
                "বাংলা",
                "ਪੰਜਾਬੀ",
                "ગુજરાતી",
                "ଓଡ଼ିଆ",
                "தமிழ்",
                "తెలుగు",
                "ಕನ್ನಡ",
                "മലയാളം",
                "සිංහල",
                "ภาษาไทย",
                "ພາສາລາວ",
                "မြန်မာဘာသာ",
                "ភាសាខ្មែរ",
                "한국어",
                "中文(台灣)",
                "中文(简体)",
                "中文(香港)",
                "日本語",
                "日本語(関西)"
            ]
        },
        "countryCode": {
            "title": "Country code as language",
            "description": "Set the country code the same as language",
            "type": "boolean",
            "editor": "checkbox",
            "default": false
        },
        "searchPages": {
            "title": "Search pages",
            "description": "Search pages from the public directory",
            "type": "array",
            "example": [
                "restaurant New York"
            ],
            "default": [],
            "editor": "stringList"
        },
        "searchLimit": {
            "title": "Max search results",
            "description": "Limit the max number of results to return",
            "type": "integer",
            "default": 10,
            "prefill": 10,
            "editor": "number"
        },
        "commentsMode": {
            "title": "Comments mode",
            "description": "Choose the way the comments are sorted",
            "type": "string",
            "default": "RANKED_THREADED",
            "editor": "select",
            "enum": ["RANKED_THREADED", "RECENT_ACTIVITY", "RANKED_UNFILTERED"],
            "enumTitles": ["Most relevant", "Newest first", "Non-filtered"]
        },
        "maxPosts": {
            "title": "Max posts",
            "description": "Limit the max number of posts to return",
            "type": "integer",
            "default": 3,
            "prefill": 3,
            "editor": "number"
        },
        "minPosts": {
            "title": "Minimum post count",
            "description": "What is the expected minimum number of posts before considering it a successful run",
            "type": "integer",
            "default": 0,
            "editor": "number"
        },
        "maxPostDate": {
            "title": "Max post date",
            "description": "Posts are retrieved from newest to oldest. Use this setting to limit how many posts in the past it should fetch.",
            "example": "3 days",
            "pattern": "^(today|yesterday|\\d+\\s?(minute|second|day|hour|month|year|week)s?|\\d{4}\\-\\d{2}\\-\\d{2}(\\s\\d{2}\\:\\d{2}\\:\\d{2})?)$",
            "type": "string",
            "editor": "textfield"
        },
        "minPostDate": {
            "title": "Min post date",
            "description": "Set the minimum post date, remembering that posts start from newest to oldest, it will skip the newest posts up to the specified date",
            "example": "2020-01-01",
            "pattern": "^(today|yesterday|\\d+\\s?(minute|second|day|hour|month|year|week)s?|\\d{4}\\-\\d{2}\\-\\d{2}(\\s\\d{2}\\:\\d{2}\\:\\d{2})?)$",
            "type": "string",
            "editor": "textfield"
        },
        "maxPostComments": {
            "title": "Max comments",
            "description": "Limit the max comments per post to return",
            "type": "integer",
            "default": 15,
            "prefill": 15,
            "editor": "number"
        },
        "minPostComments": {
            "title": "Minimum post comments",
            "description": "What is the expected minimum number of comments in each post before considering it a successful run",
            "type": "integer",
            "default": 0,
            "editor": "number"
        },
        "maxCommentDate": {
            "title": "Minimum comment date",
            "description": "Limit the minimum date for comments",
            "example": "2020-01-01",
            "pattern": "^(today|yesterday|\\d+\\s?(minute|second|day|hour|month|year|week)s?|\\d{4}\\-\\d{2}\\-\\d{2}(\\s\\d{2}\\:\\d{2}\\:\\d{2})?)$",
            "type": "string",
            "editor": "textfield"
        },
        "minCommentDate": {
            "title": "Maximum comment date",
            "description": "Limit the maximum date for comments",
            "example": "2020-01-01",
            "pattern": "^(today|yesterday|\\d+\\s?(minute|second|day|hour|month|year|week)s?|\\d{4}\\-\\d{2}\\-\\d{2}(\\s\\d{2}\\:\\d{2}\\:\\d{2})?)$",
            "type": "string",
            "editor": "textfield"
        },
        "maxReviews": {
            "title": "Max reviews",
            "description": "Limit the max number of reviews to return",
            "type": "integer",
            "default": 3,
            "prefill": 3,
            "editor": "number"
        },
        "maxReviewDate": {
            "title": "Max review date",
            "description": "Limit the date of the reviews",
            "example": "2020-01-01",
            "pattern": "^(today|yesterday|\\d+\\s?(minute|second|day|hour|month|year|week)s?|\\d{4}\\-\\d{2}\\-\\d{2}(\\s\\d{2}\\:\\d{2}\\:\\d{2})?)$",
            "type": "string",
            "editor": "textfield"
        },
        "scrapeReviews": {
            "title": "Reviews",
            "editor": "checkbox",
            "description": "Get the Reviews if it exists",
            "default": true,
            "example": true,
            "type": "boolean"
        },
        "scrapePosts": {
            "title": "Posts",
            "description": "Get the Posts",
            "default": true,
            "example": true,
            "type": "boolean",
            "editor": "checkbox"
        },
        "scrapeServices": {
            "title": "Services",
            "description": "Get the Services if it exists",
            "default": true,
            "example": true,
            "type": "boolean",
            "editor": "checkbox"
        },
        "proxyConfiguration": {
            "title": "Proxy configuration",
            "type": "object",
            "description": "If you don't have access to RESIDENTIAL proxy group, contact us at support@apify.com to get proxy trial.",
            "example": {
                "useApifyProxy": true
            },
            "prefill": {
                "useApifyProxy": true,
                "apifyProxyGroups": ["RESIDENTIAL"]
            },
            "editor": "proxy"
        },
        "extendOutputFunction": {
            "title": "Extend output function",
            "type": "string",
            "editor": "javascript",
            "description": "Extend the output item to contain more fields. The raw data is present in the 'data' variable.",
            "prefill": "({ data, item, customData, Apify }) => {\n    return item;\n}",
            "sectionCaption": "Extend scraper functionality",
            "sectionDescription": "You can change the output of the items for your dataset here, or add additional behavior on the scraper."
        },
        "extendScraperFunction": {
            "title": "Extend Scraper Function",
            "description": "Advanced function that allows you to extend the default scraper functionality, allowing you to manually perform actions on the page",
            "type": "string",
            "default": "",
            "prefill": "async ({ page, LABELS, label, request, username, map, fns, customData, Apify }) => {\n    if (label === 'HANDLE') {\n        // this is inside the handlePageFunction\n    } else if (label === 'SETUP') {\n        // before starting the crawler\n    } else if (label === 'FINISH') {\n        // after finishing the crawler\n    }\n}",
            "editor": "javascript"
        },
        "customData": {
            "title": "Custom data",
            "description": "Any data that you want to have available inside the Extend Output/Scraper Function",
            "default": {},
            "prefill": {},
            "type": "object",
            "editor": "json"
        },
        "sessionStorage": {
            "title": "Session storage",
            "description": "Provide a named session storage. Should be used in conjunction with login session actor. The same sessionStorage name should be supplied here. Don't use this unless you have a task that does Facebook logins using login-session actor",
            "type": "string",
            "editor": "textfield",
            "default": "",
            "example": "named-storage",
            "sectionCaption": "Experimental features",
            "sectionDescription": "Features in this section are highly experimental, can result in a ban of the account if logged in and might cause the solution to fail.",
            "nullable": true
        },
        "useStealth": {
            "title": "Use stealth",
            "description": "Enable stealth on headless Chrome. Enable this only if you're having problems with blocking.",
            "type": "boolean"
        },
        "maxConcurrency": {
            "title": "Max concurrency",
            "description": "Limit max concurrency to avoid crashes",
            "default": 20,
            "prefill": 20,
            "type": "integer",
            "editor": "number"
        },
        "debugLog": {
            "title": "Debug Log",
            "description": "Enable a more verbose logging to be able to understand what's happening during the scraping",
            "type": "boolean"
        }
    },
    "required": ["proxyConfiguration"]
}
